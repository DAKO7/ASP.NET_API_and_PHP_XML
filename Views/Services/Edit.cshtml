<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Content/jquery-ui-timepicker-addon.min.css" rel="stylesheet" />
@model ylesane2.Models.Service

@{
    ViewBag.Title = "Edit";
}

<div class="col-12">
    <div class="jumbotron">
        <h4 class="display-4" style="text-align:center;">
            Edit service
        </h4>
    </div>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    if (Session["Email"] != null && Convert.ToInt32(Session["RoleId"]) == 2 || Convert.ToInt32(Session["RoleId"]) == 1)
    {

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <h6 class="control-label col-md-2">User's ID</h6>
            @*@Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Email</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Name</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Second name</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SecondName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SecondName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Phone number</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Product's ID</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Product's name</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Product's price</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">When was booked</h6>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h6 class="control-label col-md-2">Day of reception</h6>
                <div class="col-md-10">
                    <select name="WorkDayId" style="overflow: auto;" onfocus='this.size=10;' onblur='this.size=1;' onchange='this.size=1; this.blur();'>
                        @foreach (ylesane2.Models.WorkDay day in ViewBag.Days)
                        {
                            <option value="@day.Id">@day.DateIn.ToString("dd-MMM-yyyy HH:mm tt")</option>
                        }
                    </select>
                    @*@Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-group mx-sm-1 mb-2 date-time-picker col-md-2", onkeydown = "return false", onpaste = "return false", autocomplete = "off" } })
        @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-warning" />
                </div>
            </div>
        </div>
    }
    else
    {
        <meta http-equiv='refresh' content='0; URL=../../Home/Login'>
    }
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-timepicker-addon.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $(function () {
                $(".date-time-picker").datetimepicker({
                    changeMonth: true,
                    changeYear: true,
                    "stepMinute": 5,
                    minTime: '10:00',
                    maxTime: '18:00',
                    startTime: '10:00',
                    yearRange: "-0:+1",
                    dateFormat: 'dd-M-yy',
                    controlType: 'select',
                    minDate: 1

                });
            });

            jQuery.validator.methods.date = function (value, element) {
                var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
                if (isChrome) {
                    var d = new Date();
                    return this.optional(element) || !/Invalid|NaN/.test(new Date(d.toLocaleDateString(value)));
                } else {
                    return this.optional(element) || !/Invalid|NaN/.test(new Date(value));
                }
            };
        });

    </script>
}